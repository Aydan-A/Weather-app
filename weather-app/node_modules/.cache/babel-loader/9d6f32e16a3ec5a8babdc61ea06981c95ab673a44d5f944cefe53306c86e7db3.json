{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\My projects\\\\Weather-app\\\\weather-app\\\\src\\\\Components\\\\HourlyForecast.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport WeatherContext from \"./WeatherContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast() {\n  _s();\n  const {\n    error,\n    hourlyData\n  } = useContext(WeatherContext);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  if (!hourlyData || hourlyData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-data\",\n      children: \"No hourly forecast data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hourly-forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Hourly Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-container\",\n      children: hourlyData.map((hour, index) => {\n        /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hour\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: new Date(hour.dt * 1000).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"{`http://openweathermap.org/img/wn/${hour.weather[0].icon}.png`}\",\n            alt: \"{hour.weather[0].description}\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: hour.temp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: hour.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Forecast, \"6jdsIplZ4/amdt6e26KKx1ll3EM=\");\n_c = Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","useState","useContext","WeatherContext","jsxDEV","_jsxDEV","Forecast","_s","error","hourlyData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","hour","index","Date","dt","toLocaleTimeString","src","alt","temp","weather","description","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/My projects/Weather-app/weather-app/src/Components/HourlyForecast.jsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport WeatherContext from \"./WeatherContext\";\r\n\r\nexport default function Forecast() {\r\n  const { error, hourlyData } = useContext(WeatherContext);\r\n\r\n  if (error) {\r\n    return <p className=\"error\">{error}</p>;\r\n  }\r\n\r\n  if (!hourlyData || hourlyData.length === 0) {\r\n    return <p className=\"no-data\">No hourly forecast data available.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"hourly-forecast\">\r\n      <h3>Hourly Forecast</h3>\r\n      <div className=\"forecast-container\">\r\n        {hourlyData.map((hour, index) => {\r\n          <div className=\"hour\" key={index}>\r\n            <p>{new Date(hour.dt*1000).toLocaleTimeString()}</p>\r\n            <img src=\"{`http://openweathermap.org/img/wn/${hour.weather[0].icon}.png`}\" alt=\"{hour.weather[0].description}\" />\r\n            <p>{hour.temp}</p>\r\n            <p>{hour.weather[0].description}</p>\r\n          </div>;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM;IAAEC,KAAK;IAAEC;EAAW,CAAC,GAAGP,UAAU,CAACC,cAAc,CAAC;EAExD,IAAIK,KAAK,EAAE;IACT,oBAAOH,OAAA;MAAGK,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEH;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACzC;EAEA,IAAI,CAACN,UAAU,IAAIA,UAAU,CAACO,MAAM,KAAK,CAAC,EAAE;IAC1C,oBAAOX,OAAA;MAAGK,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACtE;EAEA,oBACEV,OAAA;IAAKK,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BN,OAAA;MAAAM,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBV,OAAA;MAAKK,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAChCF,UAAU,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC/B,aAAAd,OAAA;UAAKK,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBN,OAAA;YAAAM,QAAA,EAAI,IAAIS,IAAI,CAACF,IAAI,CAACG,EAAE,GAAC,IAAI,CAAC,CAACC,kBAAkB,CAAC;UAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpDV,OAAA;YAAKkB,GAAG,EAAC,kEAAkE;YAACC,GAAG,EAAC;UAA+B;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClHV,OAAA;YAAAM,QAAA,EAAIO,IAAI,CAACO;UAAI;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBV,OAAA;YAAAM,QAAA,EAAIO,IAAI,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACC;UAAW;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAJXI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAK3B,CAAC;MACR,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACR,EAAA,CA1BuBD,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}