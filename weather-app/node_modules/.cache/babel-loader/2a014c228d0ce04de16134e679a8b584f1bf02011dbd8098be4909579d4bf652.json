{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\My projects\\\\Weather-app\\\\weather-app\\\\src\\\\Components\\\\WeatherContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherContext = /*#__PURE__*/createContext();\nexport const WeatherProvider = ({\n  children\n}) => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(null);\n  const [hourlyData, setHourlyData] = useState(null);\n  const fetchWeather = async city => {\n    const API_Key = \"4767c92c7510a82fd1314991672cdbba\";\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_Key}&units=metric`;\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch weather data\");\n      }\n      const data = await response.json();\n      setWeather(data);\n      const {\n        lat,\n        lon\n      } = data.coord;\n      const geoUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=current,minutely,daily,alerts&appid=${API_Key}&units=metric`;\n    } catch (error) {\n      setError(error.message);\n      console.log(\"Error fetching weather data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n    value: {\n      weather,\n      error,\n      setWeather,\n      setError,\n      fetchWeather,\n      hourlyData,\n      setHourlyData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherProvider, \"oggF+i9w12+qjPUy0CEsXs7ost8=\");\n_c = WeatherProvider;\nexport default WeatherContext;\nvar _c;\n$RefreshReg$(_c, \"WeatherProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","WeatherContext","WeatherProvider","children","_s","weather","setWeather","error","setError","hourlyData","setHourlyData","fetchWeather","city","API_Key","url","response","fetch","ok","Error","data","json","lat","lon","coord","geoUrl","message","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/My projects/Weather-app/weather-app/src/Components/WeatherContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nconst WeatherContext = createContext();\r\n\r\nexport const WeatherProvider = ({ children }) => {\r\n  const [weather, setWeather] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [hourlyData, setHourlyData] = useState(null);\r\n\r\n  const fetchWeather = async (city) => {\r\n    const API_Key = \"4767c92c7510a82fd1314991672cdbba\";\r\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_Key}&units=metric`;\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch weather data\");\r\n      }\r\n      const data = await response.json();\r\n      setWeather(data);\r\n      const { lat, lon } = data.coord;\r\n      const geoUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=current,minutely,daily,alerts&appid=${API_Key}&units=metric`;\r\n    } catch (error) {\r\n      setError(error.message);\r\n      console.log(\"Error fetching weather data:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WeatherContext.Provider\r\n      value={{\r\n        weather,\r\n        error,\r\n        setWeather,\r\n        setError,\r\n        fetchWeather,\r\n        hourlyData,\r\n        setHourlyData,\r\n      }}\r\n    >\r\n      {children}\r\n    </WeatherContext.Provider>\r\n  );\r\n};\r\n\r\nexport default WeatherContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,cAAc,gBAAGJ,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMK,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMa,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnC,MAAMC,OAAO,GAAG,kCAAkC;IAClD,MAAMC,GAAG,GAAG,qDAAqDF,IAAI,UAAUC,OAAO,eAAe;IAErG,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCd,UAAU,CAACa,IAAI,CAAC;MAChB,MAAM;QAAEE,GAAG;QAAEC;MAAI,CAAC,GAAGH,IAAI,CAACI,KAAK;MAC/B,MAAMC,MAAM,GAAG,uDAAuDH,GAAG,QAAQC,GAAG,gDAAgDT,OAAO,eAAe;IAC5J,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACkB,OAAO,CAAC;MACvBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEpB,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACEP,OAAA,CAACC,cAAc,CAAC2B,QAAQ;IACtBC,KAAK,EAAE;MACLxB,OAAO;MACPE,KAAK;MACLD,UAAU;MACVE,QAAQ;MACRG,YAAY;MACZF,UAAU;MACVC;IACF,CAAE;IAAAP,QAAA,EAEDA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAAC7B,EAAA,CAvCWF,eAAe;AAAAgC,EAAA,GAAfhC,eAAe;AAyC5B,eAAeD,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}