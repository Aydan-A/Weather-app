{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\My projects\\\\Weather-app\\\\weather-app\\\\src\\\\Components\\\\SearchArea.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport WeatherDisplay from \"./HourlyForecast\";\nimport WeatherContext from \"./WeatherContext\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchArea() {\n  _s();\n  const [city, setCity] = useState(\"\");\n  const {\n    updateWeather,\n    updateError\n  } = useContext(WeatherContext);\n  const fetchWeather = async () => {\n    // const API_Key = \"4767c92c7510a82fd1314991672cdbba\";\n    // const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_Key}&units=metric`;\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      if (response.ok) {\n        updateWeather(data);\n      } else {\n        throw new Error(data.message || \"Failed to fetch weather data\");\n      }\n    } catch (error) {\n      updateError(error.message); // Set error message\n      console.log(\"Error fetching weather data:\", error);\n    }\n  };\n  const fetchWeatherByLocation = async (lat, lon) => {\n    const API_Key = \"4767c92c7510a82fd1314991672cdbba\";\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_Key}&units=metric`;\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      if (response.ok) {\n        updateWeather(data);\n      } else {\n        throw new Error(\"Failed to fetch weather data\");\n      }\n    } catch (error) {\n      updateError(error.message);\n      console.log(\"Error fetching weather data:\", error);\n    }\n  };\n  const getLocationAndFetchWeather = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        fetchWeatherByLocation(latitude, longitude);\n      }, error => {\n        updateError(error.message);\n        console.log(\"Error retrieving your location:\", error);\n      });\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: city,\n        placeholder: \"Enter a city name\",\n        className: \"search-input\",\n        onChange: e => setCity(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search button\",\n      onClick: fetchWeather,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), \" Search\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"location button\",\n      onClick: getLocationAndFetchWeather,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-location-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), \" My Location\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchArea, \"lGIQZLN+5AeERySuNNmAQznYkN4=\");\n_c = SearchArea;\nvar _c;\n$RefreshReg$(_c, \"SearchArea\");","map":{"version":3,"names":["React","useState","useContext","WeatherDisplay","WeatherContext","ErrorBoundary","jsxDEV","_jsxDEV","SearchArea","_s","city","setCity","updateWeather","updateError","fetchWeather","response","fetch","url","data","json","ok","Error","message","error","console","log","fetchWeatherByLocation","lat","lon","API_Key","getLocationAndFetchWeather","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","className","children","action","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/My projects/Weather-app/weather-app/src/Components/SearchArea.jsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport WeatherDisplay from \"./HourlyForecast\";\r\nimport WeatherContext from \"./WeatherContext\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\n\r\n\r\nexport default function SearchArea() {\r\n  const [city, setCity] = useState(\"\");\r\n\r\n  const { updateWeather, updateError } = useContext(WeatherContext);\r\n\r\n  const fetchWeather = async () => {\r\n    // const API_Key = \"4767c92c7510a82fd1314991672cdbba\";\r\n    // const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_Key}&units=metric`;\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        updateWeather(data);\r\n      } else {\r\n        throw new Error(data.message || \"Failed to fetch weather data\");\r\n      }\r\n    } catch (error) {\r\n      updateError(error.message); // Set error message\r\n      console.log(\"Error fetching weather data:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchWeatherByLocation = async (lat, lon) => {\r\n    const API_Key = \"4767c92c7510a82fd1314991672cdbba\";\r\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_Key}&units=metric`;\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        updateWeather(data);\r\n      } else {\r\n        throw new Error(\"Failed to fetch weather data\");\r\n      }\r\n    } catch (error) {\r\n      updateError(error.message);\r\n      console.log(\"Error fetching weather data:\", error);\r\n    }\r\n  };\r\n\r\n  const getLocationAndFetchWeather = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          fetchWeatherByLocation(latitude, longitude);\r\n        },\r\n        (error) => {\r\n          updateError(error.message);\r\n          console.log(\"Error retrieving your location:\", error);\r\n        }\r\n      );\r\n    } else {\r\n      console.log(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-section\">\r\n      <form action=\"\" className=\"search-form\">\r\n        <span>Search</span>\r\n        <input\r\n          type=\"text\"\r\n          value={city}\r\n          placeholder=\"Enter a city name\"\r\n          className=\"search-input\"\r\n          onChange={(e) => setCity(e.target.value)}\r\n          required\r\n        />\r\n      </form>\r\n      <button className=\"search button\" onClick={fetchWeather}>\r\n        {\" \"}\r\n        <i className=\"fas fa-search\"></i> Search\r\n      </button>\r\n      <button className=\"location button\" onClick={getLocationAndFetchWeather}>\r\n        {\" \"}\r\n        <i className=\"fas fa-location-arrow\"></i> My Location\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,aAAa,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrD,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAM;IAAEW,aAAa;IAAEC;EAAY,CAAC,GAAGX,UAAU,CAACE,cAAc,CAAC;EAEjE,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA;;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC;MACjC,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACfR,aAAa,CAACM,IAAI,CAAC;MACrB,CAAC,MAAM;QACL,MAAM,IAAIG,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,8BAA8B,CAAC;MACjE;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,WAAW,CAACU,KAAK,CAACD,OAAO,CAAC,CAAC,CAAC;MAC5BE,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAMG,sBAAsB,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;IACjD,MAAMC,OAAO,GAAG,kCAAkC;IAClD,MAAMZ,GAAG,GAAG,uDAAuDU,GAAG,QAAQC,GAAG,UAAUC,OAAO,eAAe;IAEjH,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC;MACjC,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAElC,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACfR,aAAa,CAACM,IAAI,CAAC;MACrB,CAAC,MAAM;QACL,MAAM,IAAIG,KAAK,CAAC,8BAA8B,CAAC;MACjD;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdV,WAAW,CAACU,KAAK,CAACD,OAAO,CAAC;MAC1BE,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAMO,0BAA0B,GAAGA,CAAA,KAAM;IACvC,IAAIC,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;QACZ,MAAM;UAAEC,QAAQ;UAAEC;QAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;QAC/CX,sBAAsB,CAACS,QAAQ,EAAEC,SAAS,CAAC;MAC7C,CAAC,EACAb,KAAK,IAAK;QACTV,WAAW,CAACU,KAAK,CAACD,OAAO,CAAC;QAC1BE,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,KAAK,CAAC;MACvD,CACF,CAAC;IACH,CAAC,MAAM;MACLC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;IAC9D;EACF,CAAC;EAED,oBACElB,OAAA;IAAK+B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhC,OAAA;MAAMiC,MAAM,EAAC,EAAE;MAACF,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACrChC,OAAA;QAAAgC,QAAA,EAAM;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnBrC,OAAA;QACEsC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEpC,IAAK;QACZqC,WAAW,EAAC,mBAAmB;QAC/BT,SAAS,EAAC,cAAc;QACxBU,QAAQ,EAAGC,CAAC,IAAKtC,OAAO,CAACsC,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;QACzCK,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACPrC,OAAA;MAAQ+B,SAAS,EAAC,eAAe;MAACc,OAAO,EAAEtC,YAAa;MAAAyB,QAAA,GACrD,GAAG,eACJhC,OAAA;QAAG+B,SAAS,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,WACnC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTrC,OAAA;MAAQ+B,SAAS,EAAC,iBAAiB;MAACc,OAAO,EAAEtB,0BAA2B;MAAAS,QAAA,GACrE,GAAG,eACJhC,OAAA;QAAG+B,SAAS,EAAC;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,gBAC3C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnC,EAAA,CAlFuBD,UAAU;AAAA6C,EAAA,GAAV7C,UAAU;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}