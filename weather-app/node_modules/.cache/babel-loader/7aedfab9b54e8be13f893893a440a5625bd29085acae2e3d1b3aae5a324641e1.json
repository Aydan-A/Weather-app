{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\My projects\\\\Weather-app\\\\weather-app\\\\src\\\\Components\\\\WeatherContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherContext = /*#__PURE__*/createContext();\nexport const WeatherProvider = ({\n  children\n}) => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async city => {\n      const API_Key = \"4767c92c7510a82fd1314991672cdbba\";\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_Key}&units=metric`;\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        if (response.ok) {\n          updateWeather(data);\n        } else {\n          throw new Error(data.message || \"Failed to fetch weather data\");\n        }\n      } catch (error) {\n        updateError(error.message); // Set error message\n        console.log(\"Error fetching weather data:\", error);\n      }\n    };\n  }, [city]);\n  const updateWeather = data => {\n    setWeather(data);\n    setError(null);\n  };\n  const updateError = errorMessage => {\n    setWeather(null);\n    setError(errorMessage);\n  };\n  return /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n    value: {\n      weather,\n      error,\n      updateWeather,\n      updateError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherProvider, \"dducRVO0pCJQnxjTimDps8bxXd8=\");\n_c = WeatherProvider;\nexport default WeatherContext;\nvar _c;\n$RefreshReg$(_c, \"WeatherProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","WeatherContext","WeatherProvider","children","_s","weather","setWeather","error","setError","fetchWeather","city","API_Key","url","response","fetch","data","json","ok","updateWeather","Error","message","updateError","console","log","errorMessage","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/My projects/Weather-app/weather-app/src/Components/WeatherContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nconst WeatherContext = createContext();\r\n\r\nexport const WeatherProvider = ({ children }) => {\r\n  const [weather, setWeather] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchWeather = async (city) => {\r\n      const API_Key = \"4767c92c7510a82fd1314991672cdbba\";\r\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_Key}&units=metric`;\r\n\r\n      try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          updateWeather(data);\r\n        } else {\r\n          throw new Error(data.message || \"Failed to fetch weather data\");\r\n        }\r\n      } catch (error) {\r\n        updateError(error.message); // Set error message\r\n        console.log(\"Error fetching weather data:\", error);\r\n      }\r\n    };\r\n  }, [city]);\r\n\r\n  const updateWeather = (data) => {\r\n    setWeather(data);\r\n    setError(null);\r\n  };\r\n\r\n  const updateError = (errorMessage) => {\r\n    setWeather(null);\r\n    setError(errorMessage);\r\n  };\r\n\r\n  return (\r\n    <WeatherContext.Provider\r\n      value={{ weather, error, updateWeather, updateError }}\r\n    >\r\n      {children}\r\n    </WeatherContext.Provider>\r\n  );\r\n};\r\n\r\nexport default WeatherContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,cAAc,gBAAGL,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMM,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMW,YAAY,GAAG,MAAOC,IAAI,IAAK;MACnC,MAAMC,OAAO,GAAG,kCAAkC;MAClD,MAAMC,GAAG,GAAG,qDAAqDF,IAAI,UAAUC,OAAO,eAAe;MAErG,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAIH,QAAQ,CAACI,EAAE,EAAE;UACfC,aAAa,CAACH,IAAI,CAAC;QACrB,CAAC,MAAM;UACL,MAAM,IAAII,KAAK,CAACJ,IAAI,CAACK,OAAO,IAAI,8BAA8B,CAAC;QACjE;MACF,CAAC,CAAC,OAAOb,KAAK,EAAE;QACdc,WAAW,CAACd,KAAK,CAACa,OAAO,CAAC,CAAC,CAAC;QAC5BE,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEhB,KAAK,CAAC;MACpD;IACF,CAAC;EACH,CAAC,EAAE,CAACG,IAAI,CAAC,CAAC;EAEV,MAAMQ,aAAa,GAAIH,IAAI,IAAK;IAC9BT,UAAU,CAACS,IAAI,CAAC;IAChBP,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,MAAMa,WAAW,GAAIG,YAAY,IAAK;IACpClB,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAACgB,YAAY,CAAC;EACxB,CAAC;EAED,oBACExB,OAAA,CAACC,cAAc,CAACwB,QAAQ;IACtBC,KAAK,EAAE;MAAErB,OAAO;MAAEE,KAAK;MAAEW,aAAa;MAAEG;IAAY,CAAE;IAAAlB,QAAA,EAErDA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAAC1B,EAAA,CAzCWF,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AA2C5B,eAAeD,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}